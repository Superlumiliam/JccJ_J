version: '3.5'

x-minio-common: &minio-common
  image: quay.io/minio/minio:latest
  command: server --console-address ":9001" http://minio{1...2}/data{1...2}
  expose:
    - "9000"
    - "9001" # TODO 不暴露9001端口号
  environment:
    MINIO_ROOT_USER: doushengMinio
    MINIO_ROOT_PASSWORD: doushengMinio
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

# 服务容器配置
services:
  Etcd:
    image: 'bitnami/etcd:latest'
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    ports:
      - 2379:2379

  mysql:
    image: 'mysql:latest'
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=Doushengdb
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pass
      - MYSQL_RANDOM_ROOT_PASSWORD="yes"
  # starts 4 docker containers running minio server instances.
  # using nginx reverse proxy, load balancing, you can access
  # it through port 9000.
  # 高性能对象存储
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - ./data/data1-1:/data1
      - ./data/data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - ./data/data2-1:/data1
      - ./data/data2-2:/data2


  nginx:
    image: nginx:alpine
    hostname: nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./log/nginx:/var/log/nginx:rw
      - ./data/cache/nginx:/usr/local/nginx/conf/cache:rw
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
